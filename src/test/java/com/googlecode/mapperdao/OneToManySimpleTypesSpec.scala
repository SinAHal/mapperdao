package com.googlecode.mapperdao
import org.specs2.mutable.SpecificationWithJUnit
import com.googlecode.mapperdao.jdbc.Setup

/**
 * @author kostantinos.kougios
 *
 * 31 Oct 2011
 */
class OneToManySimpleTypesSpec extends SpecificationWithJUnit {
	import OneToManySimpleTypesSpec._
	val typeRegistry = TypeRegistry(ProductEntity)
	val (jdbc, driver, mapperDao) = Setup.setupMapperDao(typeRegistry)

	"persist" in {
		val product = Product("test", Set("tag1", "tag2", "tag3"))
		val inserted = mapperDao.insert(ProductEntity, product)
		inserted must_== product
	}
}

object OneToManySimpleTypesSpec {
	case class Product(name: String, tags: Set[String])

	object ProductEntity extends Entity[IntId, Product](classOf[Product]) {
		val id = intAutoGeneratedPK("id", _.id)
		val name = string("name", _.name)
		val tags = oneToMany(classOf[String], _.tags)
		def constructor(implicit m: ValuesMap) = new Product(name, tags) with IntId with Persisted {
			val id: Int = ProductEntity.id
		}
	}
}