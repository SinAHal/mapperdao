package com.googlecode.mapperdao
import org.specs2.mutable.SpecificationWithJUnit

/**
 * @author kostantinos.kougios
 *
 * 11 Oct 2011
 */
class MemoryMapperDaoSpec extends SpecificationWithJUnit {
	case class JobPosition(var name: String)
	object JobPositionEntity extends Entity[IntId, JobPosition](classOf[JobPosition]) {
		val id = intAutoGeneratedPK("id", _.id)
		val name = string("name", _.name)
		def constructor(implicit m: ValuesMap) = new JobPosition(name) with IntId with Persisted {
			val id: Int = JobPositionEntity.id
		}
	}
	val typeRegistry = TypeRegistry(JobPositionEntity)

	"insert" in {
		val m = MemoryMapperDao(typeRegistry)

		{
			val inserted = m.insert(JobPositionEntity, JobPosition("x"))
			inserted must_== JobPosition("x")
			inserted.id must_== 1
		}
		{
			val inserted = m.insert(JobPositionEntity, JobPosition("y"))
			inserted must_== JobPosition("y")
			inserted.id must_== 2
		}
	}

	"select" in {
		val m = MemoryMapperDao(typeRegistry)

		val inserted = m.insert(JobPositionEntity, JobPosition("x"))
		m.select(JobPositionEntity, inserted.id).get must_== JobPosition("x")
	}
}