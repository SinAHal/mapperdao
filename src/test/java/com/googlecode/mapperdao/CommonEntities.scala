package com.googlecode.mapperdao

/**
 * @author kostantinos.kougios
 *
 * 22 May 2012
 */
object CommonEntities {
	case class Product(val name: String, val attributes: Set[Attribute])
	case class Attribute(val name: String, val value: String)

	object ProductEntity extends Entity[IntId, Product]("Product", classOf[Product]) {
		val id = key("id") autogenerated (_.id)
		val name = column("name") to (_.name)
		val attributes = manytomany(AttributeEntity) to (_.attributes)

		def constructor(implicit m) = new Product(name, attributes) with Persisted with IntId {
			val id: Int = ProductEntity.id
		}
	}
	object AttributeEntity extends Entity[IntId, Attribute]("Attribute", classOf[Attribute]) {
		val id = key("id") autogenerated (_.id)
		val name = column("name") to (_.name)
		val value = column("value") to (_.value)

		def constructor(implicit m) = new Attribute(name, value) with Persisted with IntId {
			val id: Int = AttributeEntity.id
		}
	}
}