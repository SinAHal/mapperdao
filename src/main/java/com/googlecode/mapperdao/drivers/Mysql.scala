package com.googlecode.mapperdao.drivers
import com.googlecode.mapperdao.TypeRegistry
import com.googlecode.mapperdao.ColumnBase
import com.googlecode.mapperdao.jdbc.UpdateResultWithGeneratedKeys
import com.googlecode.mapperdao.jdbc.Jdbc
import com.googlecode.mapperdao.Type

/**
 * @author kostantinos.kougios
 *
 * 2 Sep 2011
 */
class Mysql(override val jdbc: Jdbc, override val typeRegistry: TypeRegistry) extends Driver {

	override protected def sequenceSelectNextSql(sequenceColumn: ColumnBase): String = throw new IllegalStateException("MySql doesn't support sequences")

	override protected def insertSql[PC, T](tpe: Type[PC, T], args: List[(ColumnBase, Any)]): String =
		{
			val sql = super.insertSql(tpe, args)
			if (args.isEmpty) {
				sql + "\nvalues()"
			} else sql
		}

	protected[mapperdao] override def getAutoGenerated(ur: UpdateResultWithGeneratedKeys, column: ColumnBase): Any = ur.keys.get("GENERATED_KEY").get
}