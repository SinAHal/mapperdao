package com.googlecode.mapperdao.state.persistcmds

import com.googlecode.mapperdao._
import java.util.IdentityHashMap

/**
 * entities are converted to PersistOps
 *
 * @author kostantinos.kougios
 *
 * 21 Nov 2012
 */
class PersistCmdFactory {

	private val alreadyProcessed = new IdentityHashMap[Any, PersistCmd[_, _]]

	def toCmd[ID, T](
		entity: Entity[ID, _ <: DeclaredIds[ID], T],
		o: T) = o match {
		case _: Persisted => update(entity.asInstanceOf[Entity[ID, DeclaredIds[ID], T]], o)
		case _ => insert(entity.asInstanceOf[Entity[ID, DeclaredIds[ID], T]], o)
	}

	private def insert[ID, T](
		entity: Entity[ID, DeclaredIds[ID], T],
		o: T) = {
		val op = alreadyProcessed.get(o)
		if (op == null) {
			val tpe = entity.tpe
			val table = tpe.table
			val columnAndValues = table.toListOfColumnAndValueTuples(table.simpleTypeNotAutoGeneratedColumns, o)
			val op = InsertCmd(entity, o, columnAndValues, Nil)
			alreadyProcessed.put(o, op)
			op
		} else
			AlreadyProcessedCmd(entity, o)
	}

	private def update[ID, T](
		entity: Entity[ID, DeclaredIds[ID], T],
		o: T) = {
		val op = alreadyProcessed.get(o)
		if (op == null) {
			val tpe = entity.tpe
			val table = tpe.table
			val columnAndValues = table.toListOfColumnAndValueTuples(table.simpleTypeNotAutoGeneratedColumns, o)
			val op = UpdateCmd(entity, o, columnAndValues, Nil)
			alreadyProcessed.put(o, op)
			op
		} else
			AlreadyProcessedCmd(entity, o)
	}
}