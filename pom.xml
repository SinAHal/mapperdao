<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.googlecode.mapperdao</groupId>
	<artifactId>mapperdao</artifactId>
	<packaging>jar</packaging>
	<version>0.5.1</version>
	<name>mapperdao</name>
	<description><![CDATA[
	MapperDao is an ORM library for the scala language. It allows
    * a clean domain model
    * no references to mapperdao outside of dao classes
    * no special rules or restrictions for entities. No reference to mapperdao within entities, no annotations necessary.
    * promotes and encourages immutability for the domain classes
    * the library is not based on reflection
    * type safe
    * DSL for queries which resembles typical select statements. Minimal learning curve.
    * uses spring's JdbcTemplate for low level database access, taking advantage of the api but without the need for mapperdao to be used within spring framework. Connecting to databases, transactions etc can be configured without (and ofcourse within) spring. MapperDao is spring friendly and all spring's database related features can be used when creating dao's with mapperdao.
    * postgresql & mysql support, oracle support to be available soon
    * uses joda datetime (immutable date & time classes) to manage datetimes but java.util.Calendar is also supported 
    ]]></description>
	<url>https://code.google.com/p/mapperdao/</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>
	<scm>
		<connection>scm:svn:https://mapperdao.googlecode.com/svn/trunk/</connection>
		<developerConnection>scm:svn:https://mapperdao.googlecode.com/svn/trunk/</developerConnection>
		<url>https://code.google.com/p/mapperdao/source/browse/</url>
	</scm>
	<issueManagement>
		<system>Google Code</system>
		<url>https://code.google.com/p/mapperdao/issues/list</url>
	</issueManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>3.0.6.RELEASE</spring.version>
		<scala.version>2.9.1</scala.version>
		<scala.lib.version>2.9.0-1</scala.lib.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-asm</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aop</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-expression</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.0-801.jdbc4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.specs2</groupId>
			<artifactId>specs2_${scala.lib.version}</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.specs2</groupId>
			<artifactId>specs2-scalaz-core_${scala.lib.version}</artifactId>
			<version>6.0.RC2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.2</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.29</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>1.6.2</version>
		</dependency>
		<dependency>
			<groupId>org.scala-tools.time</groupId>
			<artifactId>time_${scala.version}</artifactId>
			<version>0.5</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.17</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- Ensures we are compiling at 1.7 level -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<version>2.15.2</version>
				<configuration>
					<scalaVersion>${scala.version}</scalaVersion>
					<charset>${project.build.sourceEncoding}</charset>
					<jvmArgs>
						<jvmArg>-Xmx1024m</jvmArg>
					</jvmArgs>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<skip>true</skip>
				</configuration>
				<executions>
					<execution>
						<id>mysql</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<argLine>-Ddatabase=mysql</argLine>
							<includes>
								<include>**/*Spec.class</include>
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>postgresql</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<argLine>-Ddatabase=postgresql</argLine>
							<includes>
								<include>**/*Spec.class</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.2.1</version>
			</plugin>
			<plugin>
				<artifactId>maven-repository-plugin</artifactId>
				<version>2.3.1</version>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/dist.xml</descriptor>
					</descriptors>
					<descriptorRefs>
						<descriptorRef>project</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>scala-tools.releases</id>
			<name>Scala-Tools Dependencies Repository for Releases</name>
			<url>http://scala-tools.org/repo-releases</url>
		</repository>
		<repository>
			<id>scala-tools.org.snapshots</id>
			<name>Scala Tools Maven2 Repository</name>
			<url>http://scala-tools.org/repo-snapshots</url>
			<snapshots />
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>scala-tools.releases</id>
			<name>Scala-Tools Plugins Repository for Releases</name>
			<url>http://scala-tools.org/repo-releases</url>
		</pluginRepository>
	</pluginRepositories>
	<profiles>
		<profile>
			<id>sonatype-deploy</id>
			<build>
				<defaultGoal>deploy</defaultGoal>
				<plugins>
					<plugin>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<useAgent>true</useAgent>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>